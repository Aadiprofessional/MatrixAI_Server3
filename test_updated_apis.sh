#!/bin/bash

# Test script for updated APIs with StealthGPT integration
# Make sure the server is running on localhost:3002

echo "üöÄ Testing Updated APIs with StealthGPT Integration"
echo "===================================================="
echo ""

# Generate a long text for testing word limits (over 2000 words)
LONG_TEXT=""
for i in {1..2001}; do
    LONG_TEXT="$LONG_TEXT word$i"
done

# Test 1: Humanizer API with StealthGPT - Valid request (under 2000 words)
echo "ü§ñ Test 1: Humanizer API with StealthGPT - Valid Request"
echo "--------------------------------------------------------"
curl --location 'http://localhost:3002/api/humanize/createHumanization' \
  --header 'Content-Type: application/json' \
  --data '{
    "uid": "12345678-1234-1234-1234-123456789012",
    "prompt": "This is a sample text that needs to be humanized using StealthGPT. The system will process this content and make it appear more human-written while maintaining the original meaning and context.",
    "title": "Test StealthGPT Humanization",
    "tags": ["test", "stealthgpt"],
    "language": "en",
    "tone": "Standard",
    "mode": "Medium",
    "detector": "turnitin"
  }'
echo -e "\n\n"

# Test 2: Humanizer API - Text exceeding 2000 words (should fail)
echo "ü§ñ Test 2: Humanizer API - Text Exceeding 2000 Words (Should Fail)"
echo "----------------------------------------------------------------"
curl --location 'http://localhost:3002/api/humanize/createHumanization' \
  --header 'Content-Type: application/json' \
  --data "{
    \"uid\": \"12345678-1234-1234-1234-123456789012\",
    \"prompt\": \"$LONG_TEXT\",
    \"title\": \"Test Long Text\",
    \"tags\": [\"test\", \"long\"],
    \"language\": \"en\"
  }"
echo -e "\n\n"

# Test 3: AI Detector API - Valid request (under 2000 words)
echo "üîç Test 3: AI Detector API - Valid Request"
echo "------------------------------------------"
curl --location 'http://localhost:3002/api/detection/createDetection' \
  --header 'Content-Type: application/json' \
  --data '{
    "uid": "12345678-1234-1234-1234-123456789012",
    "text": "This is a sample text that will be analyzed for AI detection. The system will determine if this content was generated by artificial intelligence or written by a human. This analysis helps identify AI-generated content.",
    "title": "Test AI Detection",
    "tags": ["test", "detection"],
    "language": "en"
  }'
echo -e "\n\n"

# Test 4: AI Detector API - Text exceeding 2000 words (should fail)
echo "üîç Test 4: AI Detector API - Text Exceeding 2000 Words (Should Fail)"
echo "----------------------------------------------------------------"
curl --location 'http://localhost:3002/api/detection/createDetection' \
  --header 'Content-Type: application/json' \
  --data "{
    \"uid\": \"12345678-1234-1234-1234-123456789012\",
    \"text\": \"$LONG_TEXT\",
    \"title\": \"Test Long Detection\",
    \"tags\": [\"test\", \"long\"],
    \"language\": \"en\"
  }"
echo -e "\n\n"

# Test 5: Humanizer API - Missing required fields
echo "ü§ñ Test 5: Humanizer API - Missing Required Fields (Should Fail)"
echo "---------------------------------------------------------------"
curl --location 'http://localhost:3002/api/humanize/createHumanization' \
  --header 'Content-Type: application/json' \
  --data '{
    "uid": "12345678-1234-1234-1234-123456789012"
  }'
echo -e "\n\n"

# Test 6: AI Detector API - Missing required fields
echo "üîç Test 6: AI Detector API - Missing Required Fields (Should Fail)"
echo "-------------------------------------------------------------"
curl --location 'http://localhost:3002/api/detection/createDetection' \
  --header 'Content-Type: application/json' \
  --data '{
    "uid": "12345678-1234-1234-1234-123456789012"
  }'
echo -e "\n\n"

# Test 7: Humanizer API - Test different tones and modes
echo "ü§ñ Test 7: Humanizer API - Different Tone and Mode"
echo "--------------------------------------------------"
curl --location 'http://localhost:3002/api/humanize/createHumanization' \
  --header 'Content-Type: application/json' \
  --data '{
    "uid": "12345678-1234-1234-1234-123456789012",
    "prompt": "This is a formal business document that requires professional tone and high-quality humanization.",
    "title": "Formal Business Test",
    "tags": ["business", "formal"],
    "language": "en",
    "tone": "Formal",
    "mode": "High",
    "detector": "originality"
  }'
echo -e "\n\n"

# Test 8: Humanizer API - Invalid parameters
echo "ü§ñ Test 8: Humanizer API - Invalid Parameters (Should Fail)"
echo "--------------------------------------------------------"
curl --location 'http://localhost:3002/api/humanize/createHumanization' \
  --header 'Content-Type: application/json' \
  --data '{
    "uid": "12345678-1234-1234-1234-123456789012",
    "prompt": "Test with invalid parameters.",
    "tone": "InvalidTone",
    "mode": "InvalidMode",
    "detector": "invalid_detector"
  }'
echo -e "\n\n"

echo "‚úÖ All tests completed!"
echo "Note: Tests 2, 4, 5, 6, and 8 should fail with appropriate error messages."
echo "Tests 1, 3, and 7 should succeed if the user exists and has sufficient coins."
echo "Make sure STEALTHGPT_API_TOKEN is set in your environment variables."